//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM8_13.h
//   Version: 2.60, Updated on 2012/3/2 at 9:15:10
//  Generated by PSoC Designer 5.2.2551
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWM8_13_INCLUDE
#define PWM8_13_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWM8_13_EnableInt
#pragma fastcall16 PWM8_13_DisableInt
#pragma fastcall16 PWM8_13_Start
#pragma fastcall16 PWM8_13_Stop
#pragma fastcall16 PWM8_13_bReadCounter              // Read  DR0
#pragma fastcall16 PWM8_13_WritePeriod               // Write DR1
#pragma fastcall16 PWM8_13_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM8_13_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWM8_13_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWM8_13_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM8_13 API.
//-------------------------------------------------

extern void PWM8_13_EnableInt(void);                        // Proxy Class 1
extern void PWM8_13_DisableInt(void);                       // Proxy Class 1
extern void PWM8_13_Start(void);                            // Proxy Class 1
extern void PWM8_13_Stop(void);                             // Proxy Class 1
extern BYTE PWM8_13_bReadCounter(void);                     // Proxy Class 2
extern void PWM8_13_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWM8_13_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWM8_13_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWM8_13_ReadCounter(void);            // Deprecated
extern BYTE bPWM8_13_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWM8_13 API's.
//--------------------------------------------------

#define PWM8_13_CONTROL_REG_START_BIT          ( 0x01 )
#define PWM8_13_INT_REG_ADDR                   ( 0x0df )
#define PWM8_13_INT_MASK                       ( 0x20 )


//--------------------------------------------------
// Constants for PWM8_13 user defined values
//--------------------------------------------------

#define PWM8_13_PERIOD                         ( 0xff )
#define PWM8_13_PULSE_WIDTH                    ( 0xc0 )


//-------------------------------------------------
// Register Addresses for PWM8_13
//-------------------------------------------------

#pragma ioport  PWM8_13_COUNTER_REG:    0x054              //DR0 Count register
BYTE            PWM8_13_COUNTER_REG;
#pragma ioport  PWM8_13_PERIOD_REG: 0x055                  //DR1 Period register
BYTE            PWM8_13_PERIOD_REG;
#pragma ioport  PWM8_13_COMPARE_REG:    0x056              //DR2 Compare register
BYTE            PWM8_13_COMPARE_REG;
#pragma ioport  PWM8_13_CONTROL_REG:    0x057              //Control register
BYTE            PWM8_13_CONTROL_REG;
#pragma ioport  PWM8_13_FUNC_REG:   0x154                  //Function register
BYTE            PWM8_13_FUNC_REG;
#pragma ioport  PWM8_13_INPUT_REG:  0x155                  //Input register
BYTE            PWM8_13_INPUT_REG;
#pragma ioport  PWM8_13_OUTPUT_REG: 0x156                  //Output register
BYTE            PWM8_13_OUTPUT_REG;
#pragma ioport  PWM8_13_INT_REG:       0x0df               //Interrupt Mask Register
BYTE            PWM8_13_INT_REG;


//-------------------------------------------------
// PWM8_13 Macro 'Functions'
//-------------------------------------------------

#define PWM8_13_Start_M \
   PWM8_13_CONTROL_REG |=  PWM8_13_CONTROL_REG_START_BIT

#define PWM8_13_Stop_M  \
   PWM8_13_CONTROL_REG &= ~PWM8_13_CONTROL_REG_START_BIT

#define PWM8_13_EnableInt_M   \
   M8C_EnableIntMask(PWM8_13_INT_REG, PWM8_13_INT_MASK)

#define PWM8_13_DisableInt_M  \
   M8C_DisableIntMask(PWM8_13_INT_REG, PWM8_13_INT_MASK)

#endif
// end of file PWM8_13.h
