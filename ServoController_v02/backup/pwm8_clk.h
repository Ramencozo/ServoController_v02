//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM8_CLK.h
//   Version: 2.60, Updated on 2012/3/2 at 9:15:10
//  Generated by PSoC Designer 5.2.2551
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWM8_CLK_INCLUDE
#define PWM8_CLK_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWM8_CLK_EnableInt
#pragma fastcall16 PWM8_CLK_DisableInt
#pragma fastcall16 PWM8_CLK_Start
#pragma fastcall16 PWM8_CLK_Stop
#pragma fastcall16 PWM8_CLK_bReadCounter              // Read  DR0
#pragma fastcall16 PWM8_CLK_WritePeriod               // Write DR1
#pragma fastcall16 PWM8_CLK_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM8_CLK_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWM8_CLK_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWM8_CLK_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM8_CLK API.
//-------------------------------------------------

extern void PWM8_CLK_EnableInt(void);                        // Proxy Class 1
extern void PWM8_CLK_DisableInt(void);                       // Proxy Class 1
extern void PWM8_CLK_Start(void);                            // Proxy Class 1
extern void PWM8_CLK_Stop(void);                             // Proxy Class 1
extern BYTE PWM8_CLK_bReadCounter(void);                     // Proxy Class 2
extern void PWM8_CLK_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWM8_CLK_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWM8_CLK_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWM8_CLK_ReadCounter(void);            // Deprecated
extern BYTE bPWM8_CLK_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWM8_CLK API's.
//--------------------------------------------------

#define PWM8_CLK_CONTROL_REG_START_BIT         ( 0x01 )
#define PWM8_CLK_INT_REG_ADDR                  ( 0x0df )
#define PWM8_CLK_INT_MASK                      ( 0x10 )


//--------------------------------------------------
// Constants for PWM8_CLK user defined values
//--------------------------------------------------

#define PWM8_CLK_PERIOD                        ( 0xfa )
#define PWM8_CLK_PULSE_WIDTH                   ( 0x13 )


//-------------------------------------------------
// Register Addresses for PWM8_CLK
//-------------------------------------------------

#pragma ioport  PWM8_CLK_COUNTER_REG:   0x050              //DR0 Count register
BYTE            PWM8_CLK_COUNTER_REG;
#pragma ioport  PWM8_CLK_PERIOD_REG:    0x051              //DR1 Period register
BYTE            PWM8_CLK_PERIOD_REG;
#pragma ioport  PWM8_CLK_COMPARE_REG:   0x052              //DR2 Compare register
BYTE            PWM8_CLK_COMPARE_REG;
#pragma ioport  PWM8_CLK_CONTROL_REG:   0x053              //Control register
BYTE            PWM8_CLK_CONTROL_REG;
#pragma ioport  PWM8_CLK_FUNC_REG:  0x150                  //Function register
BYTE            PWM8_CLK_FUNC_REG;
#pragma ioport  PWM8_CLK_INPUT_REG: 0x151                  //Input register
BYTE            PWM8_CLK_INPUT_REG;
#pragma ioport  PWM8_CLK_OUTPUT_REG:    0x152              //Output register
BYTE            PWM8_CLK_OUTPUT_REG;
#pragma ioport  PWM8_CLK_INT_REG:       0x0df              //Interrupt Mask Register
BYTE            PWM8_CLK_INT_REG;


//-------------------------------------------------
// PWM8_CLK Macro 'Functions'
//-------------------------------------------------

#define PWM8_CLK_Start_M \
   PWM8_CLK_CONTROL_REG |=  PWM8_CLK_CONTROL_REG_START_BIT

#define PWM8_CLK_Stop_M  \
   PWM8_CLK_CONTROL_REG &= ~PWM8_CLK_CONTROL_REG_START_BIT

#define PWM8_CLK_EnableInt_M   \
   M8C_EnableIntMask(PWM8_CLK_INT_REG, PWM8_CLK_INT_MASK)

#define PWM8_CLK_DisableInt_M  \
   M8C_DisableIntMask(PWM8_CLK_INT_REG, PWM8_CLK_INT_MASK)

#endif
// end of file PWM8_CLK.h
